{"version":3,"sources":["redux/contacts/contacts-action.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","changeFilter","Form","state","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","items","onSubmit","some","item","alert","reset","className","this","type","pattern","title","required","onChange","Component","connect","contacts","dispatch","action","filter","target","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","handleDeleteContact","map","onClick","App","createReducer","contactsList","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","moduleDefaultForExport","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.818af0bf.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/add', data => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import './Form.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../redux/contacts/contacts-action';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { items, onSubmit } = this.props;\r\n    const { name } = this.state;\r\n\r\n    if (items.some(item => item.name === name)) {\r\n      alert('Contact already exist in contact list');\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"submit__form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__label\">\r\n          <h3>Name</h3>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className=\"form__label\">\r\n          <h3>Number</h3>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"form__button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: value => dispatch(action.addContact(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import './Filter.css';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../redux/contacts/contacts-action';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        className=\"filter__input\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(action.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import './Contacts.css';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../redux/contacts/contacts-action';\r\n\r\nfunction Contacts({ contacts, handleDeleteContact }) {\r\n  return (\r\n    <ul className=\"contacts__list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"contacts__item\" key={id}>\r\n          <p className=\"contacts__name\">{name}</p>\r\n          <p>{number}</p>\r\n          <button\r\n            className=\"delete__btn\"\r\n            onClick={() => handleDeleteContact(id)}\r\n          >\r\n            Delete contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleDeleteContact: id => dispatch(action.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\nimport './App.css';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <section className=\"section\">\n        <h1>Phonebook</h1>\n        <Form />\n      </section>\n\n      <section className=\"section\">\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport * as action from './contacts-action';\r\nimport contactsList from '../../Contacts.json';\r\n\r\nconst items = createReducer(contactsList, {\r\n  [action.addContact]: (state, { payload }) => [...state, payload],\r\n  [action.deleteContact]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [action.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n// чтоб убрать ошибку из консоли\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [\r\n        FLUSH,\r\n        REHYDRATE,\r\n        PAUSE,\r\n        PERSIST,\r\n        PURGE,\r\n        REGISTER,\r\n      ],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  //devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst moduleDefaultForExport = { store, persistor };\r\n\r\nexport default moduleDefaultForExport;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}